{"version":3,"file":"static/js/333.b2d7637e.chunk.js","mappings":"kPACA,EAA6B,yBAA7B,EAA6D,mBAA7D,EAA0F,sBAA1F,EAA2H,uB,SCMpHA,EAAO,WACZ,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAUC,EAAAA,EAAAA,MAAVD,MAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAUH,GACPI,MAAK,SAAAC,GAAG,OAAIA,EAAIP,QAChBM,KAAKL,KACR,CAACC,KAGD,+BACE,eAAIM,UAAWC,EAAf,SACGT,GAAQA,EAAKU,KAAI,SAAAC,GAAG,OAAI,gBAAIH,UAAWC,EAAf,WACvB,gBAAKG,IAAG,0CAAqCD,EAAIE,cAAgBC,IAAKH,EAAII,QACxEJ,EAAIE,eACJ,cAAGL,UAAWC,EAAd,uBAEF,eAAGD,UAAWC,EAAd,kBAAqCE,EAAII,SACzC,eAAGP,UAAWC,EAAd,wBAA2CE,EAAIK,eANSL,EAAIM,YAatEnB,EAAKoB,QAAU,CACbD,GAAIE,IAAAA,OAAAA,WACJN,aAAcM,IAAAA,OAAAA,WACdJ,KAAMI,IAAAA,OAAAA,WACNH,UAAUG,IAAAA,OAAAA,YAIZ","sources":["webpack://goit-react-hw-05-movies/./src/components/Pages/Cast/Cast.module.css?7d36","components/Pages/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"listActors\":\"Cast_listActors__4x2kZ\",\"item\":\"Cast_item__NI7Oi\",\"defCard\":\"Cast_defCard__2U0au\",\"cardText\":\"Cast_cardText__URlQC\"};","import { useState, useEffect } from 'react';\nimport PropType from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from \"services/services\";\nimport styles from '../Cast/Cast.module.css';\n\n\n const Cast = () => { \n  const [cast, setCast] = useState(null);\n  const { movId } = useParams()\n\n  useEffect(() => { \n    fetchCast(movId)\n      .then(res => res.cast)\n      .then(setCast)\n  },[movId])\n\n  return (\n    <>\n      <ul className={styles.listActors}>\n        {cast && cast.map(cas => <li className={styles.item} key={cas.id}>\n          <img src={`https://image.tmdb.org/t/p/w300/${cas.profile_path}`} alt={cas.name} />\n          {!cas.profile_path && (\n            <p className={styles.defCard}>NO PHOTO</p>\n          )}\n          <p className={styles.cardText}>Name:{cas.name}</p>\n          <p className={styles.cardText}>Character: {cas.character}</p>\n        </li>)}\n      </ul>\n    </>\n  );\n}\n\nCast.protype = {\n  id: PropType.number.isRequired,\n  profile_path: PropType.string.isRequired,\n  name: PropType.string.isRequired,\n  character:PropType.string.isRequired\n}\n\n\nexport default Cast;"],"names":["Cast","useState","cast","setCast","movId","useParams","useEffect","fetchCast","then","res","className","styles","map","cas","src","profile_path","alt","name","character","id","protype","PropType"],"sourceRoot":""}